.TH pvc 1 "@DATE@" "Version @VERSION@"
.SH NAME
pvc - Program Version Checker

.SH SYNOPSIS
pvc add <--project name> <-type type > [--urlbase urlbase] [--watchlist name]
.br
pvc delete <--project name> [--watchlist name]
.br
pvc check <--project name [name ...]> [--watchlist name]
.br
pvc update <--project name> [--version version] [--watchlist name]
.br
pvc list [--watchlist name]
.br
pvc show [--project name] [--watchlist name]
.br
pvc config [--add item] [--delete item] [--show item]

.SH DESCRIPTION
.B pvc
manages a
.B "watch list"
of projects whose source code repositories may be queried to ascertain the latest release.
Operations on the watch list are performed using a series of sub commands, namely
.B "add, delete, check, update, list, show"
and
.B "config."
.P
All these commands normally operate on a default watch list. However user defined watch lists may also be used by specifying (using the --watchlist option) a watch list name that has previously been defined with the
.B config
command.
.P
The
.B add
command is used to add a project to the watch list. It requires to be passed a project name (via the --project option) and a repository retrieval type (via the --type option). The available retrieval types may be displayed by running
.B "pvc config"
without any options. The --urlbase option may not be required, depending on the repository type being accessed. If not supplied, it defaults to whatever is passed as the project name. The url base is often just a key to the location of a project within a repository. For instance, project urls hosted at GitHub are distinguished by the project owner and the project name and therefore a project url of https://github.com/cwilling/hoorex would have a urlbase of
.I "cwilling/hoorex."
This project would be added by added by:
.RS
pvc add --project hoorex --type github --urlbase cwilling/hoorex
.RE
 Similarly, a pypi based project with a url of https://pypi.python.org/pypi/imutils would have a urlbase of
.I imutils
(the adjacent "pypi" part of the url is common to all projects so plays no role in distinguishing between projects). In this latter case, if the project name has already been chosen to be the same as the urlbase (as would most often be the case), then the urlbase option becomes redundant.

.P
The
.B delete
command is used to remove a project from the watch list. It requires to be passed just a project name (via the --project option).

.P
The
.B check
command compares the locally held version strings of watched projects with their remote repository counterparts. If local and remote versions are identical, pvc just reports the project name and version; if the versions differ, pvc reports both versions with a series of asterisks to draw attention to the difference.

.P
The
.B update
command updates the local version string of a project. If a particular version has been specidied (using the --version option) then this is used for the update. However if no version has been specified, the remote repository is queried and the resulting version is used for the update.

.P
The
.B list
command outputs a list of projects and their version strings.

.P
The
.B show
command shows the details of nominated projects.

.P
The
.B config
command is used to manage any key:value pairs of items that may be useful. Typical uses include alternate watch list details and authorisation details for remote repositories. Any user defined item(s) must be held in a group. For instance the username and token keys for GitHub access would be kept in the "github" group. All alternate watch list items are kept in the "watchlist" group. Items are added using the --add option which specifies the group and key:value pair(s) separated by commas e.g.
.br
    pvc config --add github,username:dduck@disney.com,token:cb43bf615ceee06
.P
A configured item is removed using the --delete option which requires the group and key to be removed e.g.
.br
    pvc config --delete watchlist,alt2
.P
If only a group name is specified, all the configured items it contains are also deleted.


.SH OPTIONS
Different options are distinguished by particular flags, each of which has a short and long form e.g.
.B -p
is equivalent to the
.B "--project"
flag. Not all options are relevant to all commands; please check the
.B "SYNOPSIS"
for precise usage. The possible option flags for most pvc commands are:
.IP "-p | --project"
specifies the project name
.IP "-t | --type"
specifies the repository type
.IP "-u | --urlbase"
specifies the url base of the project
.IP "-v | --version"
specifies a version with which to override a normally obtained version
.IP "-w | --watchlist"
specifies an alternate watch list to use

.P
If the type of option is "obvious", the option flag itself may be omitted. For instance the
.B "delete"
command can only take a project name option; therefore the -p (or --project) flag is redundant and may be omitted. For instance
.B "pvc delete -p myproject"
is equivalent to
.B "pvc delete myproject"

.P
The
.B config
command has its own set of options, namely:
.IP "-a | --add"
specifies a configuration item to be added
.IP "-d | --delete"
specifies a configuration item to be deleted
.IP "-s | --show"
specifies a configuration item to be displayed. If no item is named, all configuration items are shown.

.SH FILES
.IP "$HOME/.config/pvc/pvcConfig.json"
 contains the user configuration, as generated by pvc's
.B config
command.
.IP "$HOME/.local/share/pvc"
is the directory containing user defined "Watcher" files for additional repository types. This is also the location of the ueser's default watch list file (watchList.json) and is the preferred location for user defined alternate watch lists.
.IP "/usr/share/pvc"
is the location of pvc system files, including "Watcher" files for the default repository types.

.SH EXAMPLES
.IP "pvc add -p hoorex -t github -u cwilling/hoorex"
adds hoorex project from GitHub
.IP "pvc check --project hoorex"
checks latest release of hoorex project
.IP "pvc check hoorex"
also checks latest release of hoorex project (note --project is redundant because the check command takes only project names as arguments).
.IP "pvc update hoorex"
updates the hoorex project's version to be the same as the source repository
.IP "pvc update hoorex -v 1.2.3"
set the hoorex project's local version to be 1.2.3
.IP "pvc delete hoorex"
deletes the hoorex project from the default watch list
.IP "pvc config --add watchlist,set_ap:/home/chris/.local/share/pvc"
adds an alternative watch list named "set_ap" at /home/chris/.local/share/pvc/set_ap.json. Note that a user's .local/share/pvc is the preferred directory for these files but any directory for which the user has write permission is OK.
.IP "pvc config --add watchlist,set_d:/tmp"
adds an alternative watch list named "set_d"  in the /tmp directory.
.IP "pvc add -p a2ps -t gnu -w set_ap"
adds a2ps project to the watch list names set_ap
.IP "pvc check"
checks for latest versions of all projects in the default watch list
.IP "pvc check -w set_ap"
checks for latest versions of all projects in the watch list named set_ap
.IP "pvc config --add vim/vim,multipagelimit:1"
For repositories which paginate results with large entries, e.g. vim/vim at GitHub with over 192 pages of results, limit the number of pages queried.

.SH "SEE ALSO"
Repology (https://repology.org) for a web based approach for tracking built packages, rather than source code releases.

.SH BUGS
Please report any bugs to the author at
.B "https://github.com/cwilling/pvc/issues"

.SH AUTHOR
Christoph Willing <chris.willing@linux.com>

